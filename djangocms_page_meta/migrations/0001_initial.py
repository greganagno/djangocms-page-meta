# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-04-02 14:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GenericMetaAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, default='', help_text='Custom attribute', max_length=200, verbose_name='attribute')),
                ('name', models.CharField(help_text='Meta attribute name', max_length=200, verbose_name='name')),
                ('value', models.CharField(help_text='Meta attribute value', max_length=2000, verbose_name='value')),
            ],
            options={
                'verbose_name_plural': 'Page meta info (language-dependent)',
                'verbose_name': 'Page meta info (language-dependent)',
            },
        ),
        migrations.CreateModel(
            name='PageMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('og_type', models.CharField(blank=True, choices=[('Article', 'Article'), ('Website', 'Website')], help_text='Use Article for generic pages.', max_length=255, verbose_name='Resource type')),
                ('og_author_url', models.CharField(blank=True, default='', max_length=255, verbose_name='Author Facebook URL')),
                ('og_author_fbid', models.CharField(blank=True, default='', help_text='Use Facebook numeric ID.', max_length=16, verbose_name='Author Facebook ID')),
                ('og_publisher', models.CharField(blank=True, default='', max_length=255, verbose_name='Website Facebook URL')),
                ('og_app_id', models.CharField(blank=True, default='', max_length=255, verbose_name='Facebook App ID')),
                ('fb_pages', models.CharField(blank=True, default='', max_length=255, verbose_name='Facebook Pages ID')),
                ('twitter_author', models.CharField(blank=True, default='', help_text="'@' character not required.", max_length=255, verbose_name='Author Twitter Account')),
                ('twitter_site', models.CharField(blank=True, default='', help_text="'@' character not required.", max_length=255, verbose_name='Website Twitter Account')),
                ('twitter_type', models.CharField(blank=True, choices=[('summary', 'Summary Card'), ('summary_large_image', 'Summary Card with Large Image'), ('product', 'Product'), ('photo', 'Photo'), ('player', 'Player'), ('app', 'App')], max_length=255, verbose_name='Resource type')),
                ('gplus_author', models.CharField(blank=True, default='', help_text='Use the Google+ Name (together with "+")', max_length=255, verbose_name='Author Google+ URL')),
                ('gplus_type', models.CharField(blank=True, choices=[('Article', 'Article'), ('Blog', 'Blog'), ('WebPage', 'Page'), ('WebSite', 'WebSite'), ('Event', 'Event'), ('Product', 'Product'), ('Place', 'Place'), ('Person', 'Person'), ('Book', 'Book'), ('LocalBusiness', 'LocalBusiness'), ('Organization', 'Organization'), ('Review', 'Review')], help_text='Use Article for generic pages.', max_length=255, verbose_name='Resource type')),
                ('extended_object', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='cms.Page')),
                ('image', filer.fields.file.FilerFileField(blank=True, help_text='Used if title image is empty.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='djangocms_page_meta_page', to='filer.File')),
                ('og_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author account')),
                ('public_extension', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='draft_extension', to='djangocms_page_meta.PageMeta')),
            ],
            options={
                'verbose_name_plural': 'Page meta info (all languages)',
                'verbose_name': 'Page meta info (all languages)',
            },
        ),
        migrations.CreateModel(
            name='TitleMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(blank=True, default='', max_length=2000)),
                ('description', models.CharField(blank=True, default='', max_length=2000)),
                ('og_description', models.CharField(blank=True, default='', max_length=2000, verbose_name='Facebook Description')),
                ('twitter_description', models.CharField(blank=True, default='', max_length=2000, verbose_name='Twitter Description')),
                ('gplus_description', models.CharField(blank=True, default='', max_length=2000, verbose_name='Google+ Description')),
                ('extended_object', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='cms.Title')),
                ('image', filer.fields.file.FilerFileField(blank=True, help_text='If empty, page image will be used for all languages.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='djangocms_page_meta_title', to='filer.File')),
                ('public_extension', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='draft_extension', to='djangocms_page_meta.TitleMeta')),
            ],
            options={
                'verbose_name_plural': 'Page meta info (language-dependent)',
                'verbose_name': 'Page meta info (language-dependent)',
            },
        ),
        migrations.AddField(
            model_name='genericmetaattribute',
            name='page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra', to='djangocms_page_meta.PageMeta'),
        ),
        migrations.AddField(
            model_name='genericmetaattribute',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra', to='djangocms_page_meta.TitleMeta'),
        ),
    ]
